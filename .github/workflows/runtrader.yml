name: üìà RunTrader (Post-Close)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "30 21 * * 1-5"   # 4:30pm ET, Mon‚ÄìFri
  push:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: runtrader
  cancel-in-progress: true

jobs:
  run:
    name: Post-Close Trading Run
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      PYTHONUNBUFFERED: "1"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PIP_NO_INPUT: "1"

    steps:
      - name: üßæ Checkout repo
        uses: actions/checkout@v4

      - name: üîé Preflight (verify files exist)
        run: |
          echo "Tree (first 3 levels):"
          find . -maxdepth 3 -type f | sed 's|^\./||' | sort | head -n 200
          test -f "Start Your Own/Trading_Script.py" || (echo "‚úñ Missing: Start Your Own/Trading_Script.py" && exit 1)
          if [ ! -f "Start Your Own/Generate_Graph.py" ]; then
            echo "‚Ñπ Generate_Graph.py not found (will skip)."
          fi

      - name: üêç Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: üì¶ Install dependencies (prefer wheels)
        run: |
          python -V
          python -m pip install -U pip
          if [ -f requirements.txt ]; then
            pip install --prefer-binary -r requirements.txt || true
          fi
          pip install --prefer-binary numpy pandas matplotlib yfinance requests openai

      - name: ‚ñ∂Ô∏è Run Trading_Script.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo ">>> Trading_Script.py starting"
          python -u "Start Your Own/Trading_Script.py" --headless || echo "‚ö† Trading_Script.py returned nonzero"
          if [ ! -f signals.csv ]; then
            echo "date,symbol,side,entry,stop,target,confidence,notes" > signals.csv
            echo "‚ö† Created blank signals.csv (script did not write one)."
          fi

      - name: ‚ñ∂Ô∏è Run Generate_Graph.py (optional)
        if: ${{ hashFiles('Start Your Own/Generate_Graph.py') != '' }}
        run: |
          echo ">>> Generate_Graph.py starting"
          python -u "Start Your Own/Generate_Graph.py" || echo "‚ö† Generate_Graph.py returned nonzero"

      - name: üì§ Upload artifacts (signals + charts + CSVs)
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: |
            signals.csv
            **/*.png
            **/*.csv
            **/*.txt
          if-no-files-found: warn

      # ---- OPTIONAL: Alpaca paper trading (skips if any secret missing) ----
      - name: ü§ù Route orders via Alpaca (PAPER)
        if: ${{ secrets.ALPACA_API_KEY && secrets.ALPACA_SECRET_KEY && secrets.ALPACA_BASE_URL }}
        env:
          ALPACA_API_KEY:     ${{ secrets.ALPACA_API_KEY }}
          ALPACA_SECRET_KEY:  ${{ secrets.ALPACA_SECRET_KEY }}
          ALPACA_BASE_URL:    ${{ secrets.ALPACA_BASE_URL }}   # use https://paper-api.alpaca.markets for testing
          RISK_PCT_PER_TRADE: "0.005"
          MAX_POS_PCT:        "0.10"
          MAX_OPEN_NAMES:     "5"
          ACCOUNT_EQUITY:     ""
          ALLOW_SHORTS:       "false"
          USE_LIMIT:          "false"
          TIME_IN_FORCE:      "day"
        run: python automation/order_router.py

      # ---- OPTIONAL: Email via Outlook (skips if any secret missing) ----
      - name: ‚úâÔ∏è Email results (Outlook SMTP)
        if: ${{ secrets.SMTP_SERVER && secrets.SMTP_PORT && secrets.SMTP_USER && secrets.SMTP_PASS }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASS }}
          subject: RunTrader Results (post-close)
          to: mona.ghadiri@outlook.com
          from: ${{ secrets.SMTP_USER }}
          content_type: text/plain
          body: |
            Attached: today's trading signals and any generated charts.
            Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          attachments: |
            signals.csv
            **/*.png